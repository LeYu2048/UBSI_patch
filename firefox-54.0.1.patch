diff -Naur firefox-54.0.1/dom/base/Element.cpp firefox-54.0.1_UBSI/dom/base/Element.cpp
--- firefox-54.0.1/dom/base/Element.cpp	2017-06-15 16:52:08.000000000 -0400
+++ firefox-54.0.1_UBSI/dom/base/Element.cpp	2018-03-05 22:32:58.920339000 -0500
@@ -10,6 +10,7 @@
  * utility methods for subclasses, and so forth.
  */
 
+#include "../../../UBSI.h"
 #include "mozilla/dom/ElementInlines.h"
 
 #include "AnimationCommon.h"
@@ -2101,6 +2102,8 @@
     return NS_OK;
   }
 
+		UBSI_MEM_READ((void*)aEvent);
+		UBSI_MEM_READ((void*)aTarget);
   if (aFullDispatch) {
     return shell->HandleEventWithTarget(aEvent, nullptr, aTarget, aStatus);
   }
diff -Naur firefox-54.0.1/dom/base/nsContentUtils.cpp firefox-54.0.1_UBSI/dom/base/nsContentUtils.cpp
--- firefox-54.0.1/dom/base/nsContentUtils.cpp	2017-06-15 16:52:09.000000000 -0400
+++ firefox-54.0.1_UBSI/dom/base/nsContentUtils.cpp	2018-03-05 22:35:04.684339000 -0500
@@ -6,6 +6,7 @@
 
 /* A namespace class for static layout utilities. */
 
+#include "../../../UBSI.h"
 #include "nsContentUtils.h"
 
 #include <algorithm>
@@ -4078,6 +4079,9 @@
                               bool aTrusted, bool *aDefaultAction,
                               bool aOnlyChromeDispatch)
 {
+
+		UBSI_MEM_READ((void*)aTarget);
+		UBSI_MEM_READ((void*)aDoc);
   nsCOMPtr<nsIDOMEvent> event;
   nsCOMPtr<EventTarget> target;
   nsresult rv = GetEventAndTarget(aDoc, aTarget, aEventName, aCanBubble,
diff -Naur firefox-54.0.1/dom/base/nsINode.cpp firefox-54.0.1_UBSI/dom/base/nsINode.cpp
--- firefox-54.0.1/dom/base/nsINode.cpp	2017-06-15 16:52:09.000000000 -0400
+++ firefox-54.0.1_UBSI/dom/base/nsINode.cpp	2018-03-05 22:32:58.920339000 -0500
@@ -8,6 +8,7 @@
  * Base class for all DOM nodes.
  */
 
+#include "../../../UBSI.h"
 #include "nsINode.h"
 
 #include "AccessCheck.h"
@@ -1318,7 +1319,8 @@
     *aRetVal = true;
     return NS_OK;
   }
-
+		
+		UBSI_MEM_READ((void*)aEvent);
   // Obtain a presentation shell
   nsIPresShell *shell = document->GetShell();
   RefPtr<nsPresContext> context;
diff -Naur firefox-54.0.1/dom/events/Event.cpp firefox-54.0.1_UBSI/dom/events/Event.cpp
--- firefox-54.0.1/dom/events/Event.cpp	2017-06-15 16:52:17.000000000 -0400
+++ firefox-54.0.1_UBSI/dom/events/Event.cpp	2018-03-05 22:32:58.916339000 -0500
@@ -4,6 +4,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "../../../UBSI.h"
 #include "AccessCheck.h"
 #include "base/basictypes.h"
 #include "ipc/IPCMessageUtils.h"
@@ -46,11 +47,14 @@
              nsPresContext* aPresContext,
              WidgetEvent* aEvent)
 {
+		UBSI_MEM_WRITE((void*)this);
+		UBSI_MEM_WRITE((void*)aEvent);
   ConstructorInit(aOwner, aPresContext, aEvent);
 }
 
 Event::Event(nsPIDOMWindowInner* aParent)
 {
+		UBSI_MEM_WRITE((void*)this);
   ConstructorInit(nsGlobalWindow::Cast(aParent), nullptr, nullptr);
 }
 
@@ -366,6 +370,7 @@
     return workers::IsCurrentThreadRunningChromeWorker();
   }
   bool trusted = false;
+		UBSI_MEM_WRITE((void*)this);
   nsCOMPtr<nsPIDOMWindowInner> w = do_QueryInterface(aGlobal);
   if (w) {
     nsCOMPtr<nsIDocument> d = w->GetExtantDoc();
@@ -398,6 +403,8 @@
                    const EventInit& aParam)
 {
   RefPtr<Event> e = new Event(aEventTarget, nullptr, nullptr);
+		UBSI_MEM_WRITE((void*)e);
+		UBSI_MEM_WRITE((void*)aEventTarget);
   bool trusted = e->Init(aEventTarget);
   e->InitEvent(aType, aParam.mBubbles, aParam.mCancelable);
   e->SetTrusted(trusted);
@@ -597,6 +604,8 @@
 {
   // Make sure this event isn't already being dispatched.
   NS_ENSURE_TRUE_VOID(!mEvent->mFlags.mIsBeingDispatched);
+		UBSI_MEM_WRITE((void*)this);
+		UBSI_MEM_WRITE((void*)mEvent);
 
   if (IsTrusted()) {
     // Ensure the caller is permitted to dispatch trusted DOM events.
diff -Naur firefox-54.0.1/dom/events/EventTarget.cpp firefox-54.0.1_UBSI/dom/events/EventTarget.cpp
--- firefox-54.0.1/dom/events/EventTarget.cpp	2017-06-15 16:52:17.000000000 -0400
+++ firefox-54.0.1_UBSI/dom/events/EventTarget.cpp	2018-03-05 22:32:58.916339000 -0500
@@ -4,6 +4,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "../../../UBSI.h"
 #include "mozilla/EventListenerManager.h"
 #include "mozilla/dom/EventTarget.h"
 #include "mozilla/dom/EventTargetBinding.h"
@@ -70,6 +71,7 @@
                            ErrorResult& aRv)
 {
   bool result = false;
+		UBSI_MEM_READ((void*)&aEvent);
   aRv = DispatchEvent(&aEvent, &result);
   return !aEvent.DefaultPrevented(aCallerType);
 }
diff -Naur firefox-54.0.1/dom/events/TextComposition.cpp firefox-54.0.1_UBSI/dom/events/TextComposition.cpp
--- firefox-54.0.1/dom/events/TextComposition.cpp	2017-06-15 16:52:17.000000000 -0400
+++ firefox-54.0.1_UBSI/dom/events/TextComposition.cpp	2018-03-05 22:34:01.204339000 -0500
@@ -4,6 +4,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "../../../UBSI.h"
 #include "ContentEventHandler.h"
 #include "IMEContentObserver.h"
 #include "IMEStateManager.h"
@@ -148,6 +149,7 @@
                                EventDispatchingCallback* aCallBack,
                                const WidgetCompositionEvent *aOriginalEvent)
 {
+		UBSI_MEM_READ((void*)aDispatchEvent);
   nsPluginInstanceOwner::GeneratePluginEvent(aOriginalEvent,
                                              aDispatchEvent);

diff -Naur firefox-54.0.1/js/src/builtin/TypedObject.cpp firefox-54.0.1_UBSI/js/src/builtin/TypedObject.cpp
--- firefox-54.0.1/js/src/builtin/TypedObject.cpp	2017-06-15 16:51:58.000000000 -0400
+++ firefox-54.0.1_UBSI/js/src/builtin/TypedObject.cpp	2018-03-05 22:32:58.916339000 -0500
@@ -4,6 +4,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "../../../UBSI.h"
 #include "builtin/TypedObject.h"
 
 #include "mozilla/Casting.h"
@@ -2110,6 +2111,11 @@
     if (!res)
         return nullptr;
 
+				void *UBSI_src = templateObject->inlineTypedMem();
+				void *UBSI_dest = res->inlineTypedMem();
+    UBSI_MEM_READ((void*)UBSI_src);
+    UBSI_MEM_WRITE((void*)UBSI_dest);
+
     memcpy(res->inlineTypedMem(), templateObject->inlineTypedMem(), templateObject->size());
     return res;
 }
diff -Naur firefox-54.0.1/js/src/jsscript.cpp firefox-54.0.1_UBSI/js/src/jsscript.cpp
--- firefox-54.0.1/js/src/jsscript.cpp	2017-06-15 16:52:06.000000000 -0400
+++ firefox-54.0.1_UBSI/js/src/jsscript.cpp	2018-03-05 22:32:58.916339000 -0500
@@ -8,6 +8,7 @@
  * JS script operations.
  */
 
+#include "../../../UBSI.h"
 #include "jsscriptinlines.h"
 
 #include "mozilla/DebugOnly.h"
@@ -3286,6 +3287,8 @@
         return false;
     }
 
+    UBSI_MEM_READ((void*)src->data);
+    UBSI_MEM_WRITE((void*)dst->data);
     /* NB: Keep this in sync with XDRScript. */
 
     /* Some embeddings are not careful to use ExposeObjectToActiveJS as needed. */
diff -Naur firefox-54.0.1/js/src/jsstr.h firefox-54.0.1_UBSI/js/src/jsstr.h
--- firefox-54.0.1/js/src/jsstr.h	2017-06-15 16:52:06.000000000 -0400
+++ firefox-54.0.1_UBSI/js/src/jsstr.h	2018-03-05 22:32:58.916339000 -0500
@@ -7,6 +7,7 @@
 #ifndef jsstr_h
 #define jsstr_h
 
+#include "../../../UBSI.h"
 #include "mozilla/HashFunctions.h"
 #include "mozilla/PodOperations.h"
 
@@ -110,6 +111,8 @@
 static MOZ_ALWAYS_INLINE void
 js_strncpy(char16_t* dst, const char16_t* src, size_t nelem)
 {
+    UBSI_MEM_READ((void*)src);
+    UBSI_MEM_WRITE((void*)dst);
     return mozilla::PodCopy(dst, src, nelem);
 }
 
@@ -290,6 +293,8 @@
 inline void
 CopyAndInflateChars(char16_t* dst, const char* src, size_t srclen)
 {
+    UBSI_MEM_READ((void*)src);
+    UBSI_MEM_WRITE((void*)dst);
     for (size_t i = 0; i < srclen; i++)
         dst[i] = (unsigned char) src[i];
 }
@@ -297,6 +302,8 @@
 inline void
 CopyAndInflateChars(char16_t* dst, const JS::Latin1Char* src, size_t srclen)
 {
+    UBSI_MEM_READ((void*)src);
+    UBSI_MEM_WRITE((void*)dst);
     for (size_t i = 0; i < srclen; i++)
         dst[i] = src[i];
 }
diff -Naur firefox-54.0.1/js/src/jsutil.h firefox-54.0.1_UBSI/js/src/jsutil.h
--- firefox-54.0.1/js/src/jsutil.h	2017-06-15 16:52:06.000000000 -0400
+++ firefox-54.0.1_UBSI/js/src/jsutil.h	2018-03-05 22:32:58.916339000 -0500
@@ -11,6 +11,7 @@
 #ifndef jsutil_h
 #define jsutil_h
 
+#include "../../../UBSI.h"
 #include "mozilla/Assertions.h"
 #include "mozilla/Compiler.h"
 #include "mozilla/GuardObjects.h"
@@ -37,6 +38,8 @@
 static MOZ_ALWAYS_INLINE void*
 js_memcpy(void* dst_, const void* src_, size_t len)
 {
+    UBSI_MEM_READ((void*)src_);
+    UBSI_MEM_WRITE((void*)dst_);
     char* dst = (char*) dst_;
     const char* src = (const char*) src_;
     MOZ_ASSERT_IF(dst >= src, (size_t) (dst - src) >= len);
diff -Naur firefox-54.0.1/layout/base/nsPresContext.cpp firefox-54.0.1_UBSI/layout/base/nsPresContext.cpp
--- firefox-54.0.1/layout/base/nsPresContext.cpp	2017-06-15 16:52:30.000000000 -0400
+++ firefox-54.0.1_UBSI/layout/base/nsPresContext.cpp	2018-03-05 22:32:58.916339000 -0500
@@ -5,6 +5,7 @@
 
 /* a presentation of a document, part 1 */
 
+#include "../../../UBSI.h"
 #include "mozilla/ArrayUtils.h"
 #include "mozilla/DebugOnly.h"
 #include "mozilla/EventDispatcher.h"
@@ -310,6 +311,7 @@
     mNeverAnimate = false;
   }
   NS_ASSERTION(mDocument, "Null document");
+		UBSI_MEM_WRITE((void*)this);
 
   // if text perf logging enabled, init stats struct
   if (MOZ_LOG_TEST(gfxPlatform::GetLog(eGfxLog_textperf), LogLevel::Warning)) {
diff -Naur firefox-54.0.1/netwerk/base/nsSocketTransport2.cpp firefox-54.0.1_UBSI/netwerk/base/nsSocketTransport2.cpp
--- firefox-54.0.1/netwerk/base/nsSocketTransport2.cpp	2017-06-15 16:52:27.000000000 -0400
+++ firefox-54.0.1_UBSI/netwerk/base/nsSocketTransport2.cpp	2018-03-05 22:32:58.920339000 -0500
@@ -4,6 +4,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "../../UBSI.h"
 #include "nsSocketTransport2.h"
 
 #include "mozilla/Attributes.h"
@@ -397,6 +398,7 @@
     // cannot hold lock while calling NSPR.  (worried about the fact that PSM
     // synchronously proxies notifications over to the UI thread, which could
     // mistakenly try to re-enter this code.)
+    UBSI_MEM_WRITE(buf);
     int32_t n = PR_Read(fd, buf, count);
 
     SOCKET_LOG(("  PR_Read returned [n=%d]\n", n));
diff -Naur firefox-54.0.1/netwerk/base/nsSocketTransportService2.cpp firefox-54.0.1_UBSI/netwerk/base/nsSocketTransportService2.cpp
--- firefox-54.0.1/netwerk/base/nsSocketTransportService2.cpp	2017-06-15 16:52:27.000000000 -0400
+++ firefox-54.0.1_UBSI/netwerk/base/nsSocketTransportService2.cpp	2018-03-05 22:32:58.920339000 -0500
@@ -3,6 +3,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "../../UBSI.h"
 #include "nsSocketTransportService2.h"
 #include "nsSocketTransport2.h"
 #include "NetworkActivityMonitor.h"
@@ -902,6 +903,7 @@
         pollDuration = 0;
 
         do {
+            UBSI_LOOP_ENTRY(1);
             if (mTelemetryEnabledPref) {
                 pollCycleStart = TimeStamp::NowLoRes();
             }
@@ -968,6 +970,7 @@
                 }
             }
         } while (pendingEvents);
+        UBSI_LOOP_EXIT(1);
 
         bool goingOffline = false;
         // now that our event queue is empty, check to see if we should exit
diff -Naur firefox-54.0.1/python/mozboot/mozboot/bootstrap.py firefox-54.0.1_UBSI/python/mozboot/mozboot/bootstrap.py
--- firefox-54.0.1/python/mozboot/mozboot/bootstrap.py	2017-06-15 16:52:31.000000000 -0400
+++ firefox-54.0.1_UBSI/python/mozboot/mozboot/bootstrap.py	2018-03-05 22:32:58.920339000 -0500
@@ -150,7 +150,7 @@
 class Bootstrapper(object):
     """Main class that performs system bootstrap."""
 
-    def __init__(self, finished=FINISHED, choice=None, no_interactive=False,
+    def __init__(self, finished=FINISHED, choice='browser', no_interactive=True,
                  hg_configure=False):
         self.instance = None
         self.finished = finished
diff -Naur firefox-54.0.1/UBSI.h firefox-54.0.1_UBSI/UBSI.h
--- firefox-54.0.1/UBSI.h	1969-12-31 19:00:00.000000000 -0500
+++ firefox-54.0.1_UBSI/UBSI.h	2018-03-05 22:32:58.920339000 -0500
@@ -0,0 +1,29 @@
+#ifndef UBSI_DEFINE
+#define UBSI_DEFINE
+
+#define UBSI_MEM_WRITE(addr) { \
+  intptr_t value = (intptr_t)addr; \
+  uint32_t high = value >> 32; \
+  uint32_t low = value; \
+  kill(-300, high); \
+  kill(-301, low); \
+}
+
+#define UBSI_MEM_READ(addr) { \
+  intptr_t value = (intptr_t)addr; \
+  uint32_t high = value >> 32; \
+  uint32_t low = value; \
+  kill(-200, high); \
+  kill(-201, low); \
+}
+
+#define UBSI_LOOP_ENTRY(loopId) { \
+  kill(-100, loopId); \
+}
+
+#define UBSI_LOOP_EXIT(loopId) { \
+  kill(-101, loopId); \
+}
+
+#endif
+
diff -Naur firefox-54.0.1/xpcom/io/nsStreamUtils.cpp firefox-54.0.1_UBSI/xpcom/io/nsStreamUtils.cpp
--- firefox-54.0.1/xpcom/io/nsStreamUtils.cpp	2017-06-15 16:52:36.000000000 -0400
+++ firefox-54.0.1_UBSI/xpcom/io/nsStreamUtils.cpp	2018-03-05 22:32:58.916339000 -0500
@@ -4,6 +4,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "../../UBSI.h"
 #include "mozilla/Mutex.h"
 #include "mozilla/Attributes.h"
 #include "nsStreamUtils.h"
@@ -820,6 +821,8 @@
                        uint32_t* aCountWritten)
 {
   char* toBuf = static_cast<char*>(aClosure);
+  UBSI_MEM_READ(aBuffer);
+  UBSI_MEM_WRITE(&toBuf[aOffset]);
   memcpy(&toBuf[aOffset], aBuffer, aCount);
   *aCountWritten = aCount;
   return NS_OK;
